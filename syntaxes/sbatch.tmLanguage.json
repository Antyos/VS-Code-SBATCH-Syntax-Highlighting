{
  "scopeName": "source.sbatch",
  "patterns": [
    {
      "begin": "^(#SBATCH)(\\s+(--[a-zA-Z-_]+)?\\s*(=)?)?",
      "end": "$",
      "beginCaptures": {
        "1": {"name": "keyword.control.sbatch"},
        "2": {"name": "meta.argument.sbatch"},
        "3": {"name": "variable.parameter.sbatch"},
        "4": {"name": "keyword.operator.assignment.sbatch"}
      },
      "contentName": "meta.argument.sbatch",
      "patterns": [
        {
          "name": "constant.numeric.sbatch",
          "match": "\\b\\d+(?:\\.\\d*)?\\b"
        },
        {
          "name": "string.quoted.double.sbatch",
          "begin": "\"",
          "end": "\"",
          "beginCaptures": {
            "0": {"name": "punctuation.definition.string.begin.sbatch"}
          },
          "endCaptures": {
            "0": {"name": "punctuation.definition.string.end.sbatch"}
          },
          "patterns": [
            {
              "include": "#filename_variable"
            }
          ]
        },
        {
          "include": "#filename_variable"
        },
        {
          "name": "comment.line.sbatch",
          "match": "#.*"
        },
        {
          "name": "variable.other.sbatch",
          "match": "\\w+"
        }
      ]
    },
    {
      "name": "keyword.line.sbatch-param",  
      "match": "^##SBATCH\\b.*"
    },
    {
      "include": "source.shell"  
    }
  ],
  "repository": {
    "filename_variable": {
      "name": "constant.character.format.placeholder.other.sbatch",
      "match": "%\\d*[a-zA-Z%]"
    }
  }
}
